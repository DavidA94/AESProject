//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AES.JobbingSvc.Tests.JobbingSvcTestClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobbingSvcTestClient.IJobbingSvc")]
    public interface IJobbingSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/AddJob", ReplyAction="http://tempuri.org/IJobbingSvc/AddJobResponse")]
        AES.Shared.JobbingResponse AddJob(AES.JobbingSvc.Contracts.JobContract job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/AddJob", ReplyAction="http://tempuri.org/IJobbingSvc/AddJobResponse")]
        System.Threading.Tasks.Task<AES.Shared.JobbingResponse> AddJobAsync(AES.JobbingSvc.Contracts.JobContract job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/AddQuestion", ReplyAction="http://tempuri.org/IJobbingSvc/AddQuestionResponse")]
        AES.Shared.JobbingResponse AddQuestion(AES.Shared.Contracts.QAContract question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/AddQuestion", ReplyAction="http://tempuri.org/IJobbingSvc/AddQuestionResponse")]
        System.Threading.Tasks.Task<AES.Shared.JobbingResponse> AddQuestionAsync(AES.Shared.Contracts.QAContract question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/AddQuestionToJob", ReplyAction="http://tempuri.org/IJobbingSvc/AddQuestionToJobResponse")]
        AES.Shared.JobbingResponse AddQuestionToJob(int jobID, int questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/AddQuestionToJob", ReplyAction="http://tempuri.org/IJobbingSvc/AddQuestionToJobResponse")]
        System.Threading.Tasks.Task<AES.Shared.JobbingResponse> AddQuestionToJobAsync(int jobID, int questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/EditJob", ReplyAction="http://tempuri.org/IJobbingSvc/EditJobResponse")]
        AES.Shared.JobbingResponse EditJob(AES.JobbingSvc.Contracts.JobContract job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/EditJob", ReplyAction="http://tempuri.org/IJobbingSvc/EditJobResponse")]
        System.Threading.Tasks.Task<AES.Shared.JobbingResponse> EditJobAsync(AES.JobbingSvc.Contracts.JobContract job);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/EditQuestion", ReplyAction="http://tempuri.org/IJobbingSvc/EditQuestionResponse")]
        AES.Shared.JobbingResponse EditQuestion(AES.Shared.Contracts.QAContract question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/EditQuestion", ReplyAction="http://tempuri.org/IJobbingSvc/EditQuestionResponse")]
        System.Threading.Tasks.Task<AES.Shared.JobbingResponse> EditQuestionAsync(AES.Shared.Contracts.QAContract question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/GetJobs", ReplyAction="http://tempuri.org/IJobbingSvc/GetJobsResponse")]
        AES.JobbingSvc.Contracts.JobContract[] GetJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/GetJobs", ReplyAction="http://tempuri.org/IJobbingSvc/GetJobsResponse")]
        System.Threading.Tasks.Task<AES.JobbingSvc.Contracts.JobContract[]> GetJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/GetQuestions", ReplyAction="http://tempuri.org/IJobbingSvc/GetQuestionsResponse")]
        AES.Shared.Contracts.QAContract[] GetQuestions(int jobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/GetQuestions", ReplyAction="http://tempuri.org/IJobbingSvc/GetQuestionsResponse")]
        System.Threading.Tasks.Task<AES.Shared.Contracts.QAContract[]> GetQuestionsAsync(int jobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/RemoveQuestionFromJob", ReplyAction="http://tempuri.org/IJobbingSvc/RemoveQuestionFromJobResponse")]
        AES.Shared.JobbingResponse RemoveQuestionFromJob(int jobID, int questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobbingSvc/RemoveQuestionFromJob", ReplyAction="http://tempuri.org/IJobbingSvc/RemoveQuestionFromJobResponse")]
        System.Threading.Tasks.Task<AES.Shared.JobbingResponse> RemoveQuestionFromJobAsync(int jobID, int questionID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobbingSvcChannel : AES.JobbingSvc.Tests.JobbingSvcTestClient.IJobbingSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobbingSvcClient : System.ServiceModel.ClientBase<AES.JobbingSvc.Tests.JobbingSvcTestClient.IJobbingSvc>, AES.JobbingSvc.Tests.JobbingSvcTestClient.IJobbingSvc {
        
        public JobbingSvcClient() {
        }
        
        public JobbingSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobbingSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobbingSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobbingSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AES.Shared.JobbingResponse AddJob(AES.JobbingSvc.Contracts.JobContract job) {
            return base.Channel.AddJob(job);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.JobbingResponse> AddJobAsync(AES.JobbingSvc.Contracts.JobContract job) {
            return base.Channel.AddJobAsync(job);
        }
        
        public AES.Shared.JobbingResponse AddQuestion(AES.Shared.Contracts.QAContract question) {
            return base.Channel.AddQuestion(question);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.JobbingResponse> AddQuestionAsync(AES.Shared.Contracts.QAContract question) {
            return base.Channel.AddQuestionAsync(question);
        }
        
        public AES.Shared.JobbingResponse AddQuestionToJob(int jobID, int questionID) {
            return base.Channel.AddQuestionToJob(jobID, questionID);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.JobbingResponse> AddQuestionToJobAsync(int jobID, int questionID) {
            return base.Channel.AddQuestionToJobAsync(jobID, questionID);
        }
        
        public AES.Shared.JobbingResponse EditJob(AES.JobbingSvc.Contracts.JobContract job) {
            return base.Channel.EditJob(job);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.JobbingResponse> EditJobAsync(AES.JobbingSvc.Contracts.JobContract job) {
            return base.Channel.EditJobAsync(job);
        }
        
        public AES.Shared.JobbingResponse EditQuestion(AES.Shared.Contracts.QAContract question) {
            return base.Channel.EditQuestion(question);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.JobbingResponse> EditQuestionAsync(AES.Shared.Contracts.QAContract question) {
            return base.Channel.EditQuestionAsync(question);
        }
        
        public AES.JobbingSvc.Contracts.JobContract[] GetJobs() {
            return base.Channel.GetJobs();
        }
        
        public System.Threading.Tasks.Task<AES.JobbingSvc.Contracts.JobContract[]> GetJobsAsync() {
            return base.Channel.GetJobsAsync();
        }
        
        public AES.Shared.Contracts.QAContract[] GetQuestions(int jobID) {
            return base.Channel.GetQuestions(jobID);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.Contracts.QAContract[]> GetQuestionsAsync(int jobID) {
            return base.Channel.GetQuestionsAsync(jobID);
        }
        
        public AES.Shared.JobbingResponse RemoveQuestionFromJob(int jobID, int questionID) {
            return base.Channel.RemoveQuestionFromJob(jobID, questionID);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.JobbingResponse> RemoveQuestionFromJobAsync(int jobID, int questionID) {
            return base.Channel.RemoveQuestionFromJobAsync(jobID, questionID);
        }
    }
}
