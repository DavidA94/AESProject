@model AES.Web.Models.QuestionnaireViewModel

<div class="editBox">
    @using (Html.BeginForm("SaveQuestion", "Staffing", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post,
                            new { @class = "form-horizontal qForm", role = "form" }))
    {
        @Html.HiddenFor(m => m.QuestionID);

        @* Question *@
        <div class="form-group">
            @Html.LabelFor(m => m.Question)
            @Html.TextBoxFor(m => m.Question, new { @class = "form-control editDisplayText" })
            @Html.ValidationMessageFor(m => m.Question, "", new { @class = "text-danger" })
        </div>

        @* Type *@
        <div class="form-group">
            @Html.LabelFor(m => m.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.Type, new { @class = "form-control questionTypeDD" })
            </div>
            @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
        </div>

        <div class="multipleChoice">
            @for (int i = 0; i < Model.Options.Count; ++i)
            {

                <div class="form-group">
                    <div class="col-md-offset-1">
                        @Html.CheckBoxFor(m => m.MC_Answers[i], new { @class = "col-md-1 multipleChoiceCheck" })
                        @{string id = "i" + Model.QuestionID.ToString() + i.ToString();}
                        @if (Model.RadioOption == id)
                        {
                            @Html.RadioButtonFor(m => m.RadioOption, @id, 
                                                    new { @id = @id, @checked = "checked", @class = "col-md-1 multipleChoiceRadio" })
                        }
                        else
                        {
                            @Html.RadioButtonFor(m => m.RadioOption, @id, new { @id = @id, @class = "col-md-1 multipleChoiceRadio" })
                        }

                        <div class="col-md-11">
                            @Html.TextBoxFor(m => m.Options[i], Model.Options[i], new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(m => m.NeededCorrect, new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.NeededCorrect, new { @class = "form-control", @type = "number", @min = "1", @max = "4" })
                </div>
                @Html.ValidationMessageFor(m => m.NeededCorrect, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save Edits" class="btn btn-default pull-right" />
            </div>
        </div>
    }
</div>
