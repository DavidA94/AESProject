//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AES.Web.OpeningService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobOpeningContract", Namespace="http://schemas.datacontract.org/2004/07/AES.OpeningsSvc.Contracts")]
    [System.SerializableAttribute()]
    public partial class JobOpeningContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string longDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string shortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string longDesc {
            get {
                return this.longDescField;
            }
            set {
                if ((object.ReferenceEquals(this.longDescField, value) != true)) {
                    this.longDescField = value;
                    this.RaisePropertyChanged("longDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string shortDesc {
            get {
                return this.shortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.shortDescField, value) != true)) {
                    this.shortDescField = value;
                    this.RaisePropertyChanged("shortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OpeningService.IOpeningSvc")]
    public interface IOpeningSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpeningSvc/GetOpenings", ReplyAction="http://tempuri.org/IOpeningSvc/GetOpeningsResponse")]
        AES.Web.OpeningService.JobOpeningContract[] GetOpenings(int StoreID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpeningSvc/GetOpenings", ReplyAction="http://tempuri.org/IOpeningSvc/GetOpeningsResponse")]
        System.Threading.Tasks.Task<AES.Web.OpeningService.JobOpeningContract[]> GetOpeningsAsync(int StoreID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOpeningSvcChannel : AES.Web.OpeningService.IOpeningSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpeningSvcClient : System.ServiceModel.ClientBase<AES.Web.OpeningService.IOpeningSvc>, AES.Web.OpeningService.IOpeningSvc {
        
        public OpeningSvcClient() {
        }
        
        public OpeningSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OpeningSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpeningSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpeningSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AES.Web.OpeningService.JobOpeningContract[] GetOpenings(int StoreID) {
            return base.Channel.GetOpenings(StoreID);
        }
        
        public System.Threading.Tasks.Task<AES.Web.OpeningService.JobOpeningContract[]> GetOpeningsAsync(int StoreID) {
            return base.Channel.GetOpeningsAsync(StoreID);
        }
    }
}
