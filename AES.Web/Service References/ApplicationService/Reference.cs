//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AES.Web.ApplicationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationInfoContract", Namespace="http://schemas.datacontract.org/2004/07/AES.ApplicationSvc.Contracts")]
    [System.SerializableAttribute()]
    public partial class ApplicationInfoContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicantIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AppliedJobsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Shared.Contracts.AvailabilityContract AvailabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Shared.Contracts.EducationHistoryContract[] EducationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Shared.Contracts.JobHistoryContract[] JobsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Web.ApplicationService.QAContract[] QAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Shared.Contracts.ReferenceContract[] ReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Shared.Contracts.UserInfoContract UserInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicantID {
            get {
                return this.ApplicantIDField;
            }
            set {
                if ((this.ApplicantIDField.Equals(value) != true)) {
                    this.ApplicantIDField = value;
                    this.RaisePropertyChanged("ApplicantID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AppliedJobs {
            get {
                return this.AppliedJobsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppliedJobsField, value) != true)) {
                    this.AppliedJobsField = value;
                    this.RaisePropertyChanged("AppliedJobs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Shared.Contracts.AvailabilityContract Availability {
            get {
                return this.AvailabilityField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailabilityField, value) != true)) {
                    this.AvailabilityField = value;
                    this.RaisePropertyChanged("Availability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Shared.Contracts.EducationHistoryContract[] Educations {
            get {
                return this.EducationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationsField, value) != true)) {
                    this.EducationsField = value;
                    this.RaisePropertyChanged("Educations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Shared.Contracts.JobHistoryContract[] Jobs {
            get {
                return this.JobsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsField, value) != true)) {
                    this.JobsField = value;
                    this.RaisePropertyChanged("Jobs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Web.ApplicationService.QAContract[] QA {
            get {
                return this.QAField;
            }
            set {
                if ((object.ReferenceEquals(this.QAField, value) != true)) {
                    this.QAField = value;
                    this.RaisePropertyChanged("QA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Shared.Contracts.ReferenceContract[] References {
            get {
                return this.ReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferencesField, value) != true)) {
                    this.ReferencesField = value;
                    this.RaisePropertyChanged("References");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Shared.Contracts.UserInfoContract UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QAContract", Namespace="http://schemas.datacontract.org/2004/07/AES.ApplicationSvc.Contracts")]
    [System.SerializableAttribute()]
    public partial class QAContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool[] MC_AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AES.Shared.QuestionType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool[] MC_Answers {
            get {
                return this.MC_AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.MC_AnswersField, value) != true)) {
                    this.MC_AnswersField = value;
                    this.RaisePropertyChanged("MC_Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortAnswer {
            get {
                return this.ShortAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortAnswerField, value) != true)) {
                    this.ShortAnswerField = value;
                    this.RaisePropertyChanged("ShortAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AES.Shared.QuestionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationService.IApplicationSvc")]
    public interface IApplicationSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/CancelApplication", ReplyAction="http://tempuri.org/IApplicationSvc/CancelApplicationResponse")]
        bool CancelApplication(AES.Web.ApplicationService.ApplicationInfoContract app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/CancelApplication", ReplyAction="http://tempuri.org/IApplicationSvc/CancelApplicationResponse")]
        System.Threading.Tasks.Task<bool> CancelApplicationAsync(AES.Web.ApplicationService.ApplicationInfoContract app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingCalls", ReplyAction="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingCallsResponse")]
        AES.Shared.Contracts.UserInfoContract GetApplicantsAwaitingCalls();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingCalls", ReplyAction="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingCallsResponse")]
        System.Threading.Tasks.Task<AES.Shared.Contracts.UserInfoContract> GetApplicantsAwaitingCallsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingInterview", ReplyAction="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingInterviewResponse")]
        AES.Shared.Contracts.UserInfoContract GetApplicantsAwaitingInterview(int storeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingInterview", ReplyAction="http://tempuri.org/IApplicationSvc/GetApplicantsAwaitingInterviewResponse")]
        System.Threading.Tasks.Task<AES.Shared.Contracts.UserInfoContract> GetApplicantsAwaitingInterviewAsync(int storeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetApplication", ReplyAction="http://tempuri.org/IApplicationSvc/GetApplicationResponse")]
        AES.Web.ApplicationService.ApplicationInfoContract GetApplication(AES.Shared.Contracts.ApplicantInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetApplication", ReplyAction="http://tempuri.org/IApplicationSvc/GetApplicationResponse")]
        System.Threading.Tasks.Task<AES.Web.ApplicationService.ApplicationInfoContract> GetApplicationAsync(AES.Shared.Contracts.ApplicantInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetCallApplication", ReplyAction="http://tempuri.org/IApplicationSvc/GetCallApplicationResponse")]
        AES.Web.ApplicationService.ApplicationInfoContract GetCallApplication(AES.Shared.Contracts.UserInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetCallApplication", ReplyAction="http://tempuri.org/IApplicationSvc/GetCallApplicationResponse")]
        System.Threading.Tasks.Task<AES.Web.ApplicationService.ApplicationInfoContract> GetCallApplicationAsync(AES.Shared.Contracts.UserInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetInterviewApplication", ReplyAction="http://tempuri.org/IApplicationSvc/GetInterviewApplicationResponse")]
        AES.Web.ApplicationService.ApplicationInfoContract GetInterviewApplication(AES.Shared.Contracts.UserInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/GetInterviewApplication", ReplyAction="http://tempuri.org/IApplicationSvc/GetInterviewApplicationResponse")]
        System.Threading.Tasks.Task<AES.Web.ApplicationService.ApplicationInfoContract> GetInterviewApplicationAsync(AES.Shared.Contracts.UserInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/PullApplicantFromCallQueue", ReplyAction="http://tempuri.org/IApplicationSvc/PullApplicantFromCallQueueResponse")]
        bool PullApplicantFromCallQueue(AES.Shared.Contracts.UserInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/PullApplicantFromCallQueue", ReplyAction="http://tempuri.org/IApplicationSvc/PullApplicantFromCallQueueResponse")]
        System.Threading.Tasks.Task<bool> PullApplicantFromCallQueueAsync(AES.Shared.Contracts.UserInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/SavePartialApplication", ReplyAction="http://tempuri.org/IApplicationSvc/SavePartialApplicationResponse")]
        AES.Shared.AppSvcResponse SavePartialApplication(AES.Web.ApplicationService.ApplicationInfoContract app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/SavePartialApplication", ReplyAction="http://tempuri.org/IApplicationSvc/SavePartialApplicationResponse")]
        System.Threading.Tasks.Task<AES.Shared.AppSvcResponse> SavePartialApplicationAsync(AES.Web.ApplicationService.ApplicationInfoContract app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/SetApplicationStatus", ReplyAction="http://tempuri.org/IApplicationSvc/SetApplicationStatusResponse")]
        bool SetApplicationStatus(AES.Web.ApplicationService.ApplicationInfoContract app, AES.Shared.AppStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/SetApplicationStatus", ReplyAction="http://tempuri.org/IApplicationSvc/SetApplicationStatusResponse")]
        System.Threading.Tasks.Task<bool> SetApplicationStatusAsync(AES.Web.ApplicationService.ApplicationInfoContract app, AES.Shared.AppStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/SubmitApplication", ReplyAction="http://tempuri.org/IApplicationSvc/SubmitApplicationResponse")]
        bool SubmitApplication(AES.Shared.Contracts.ApplicantInfoContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationSvc/SubmitApplication", ReplyAction="http://tempuri.org/IApplicationSvc/SubmitApplicationResponse")]
        System.Threading.Tasks.Task<bool> SubmitApplicationAsync(AES.Shared.Contracts.ApplicantInfoContract user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationSvcChannel : AES.Web.ApplicationService.IApplicationSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationSvcClient : System.ServiceModel.ClientBase<AES.Web.ApplicationService.IApplicationSvc>, AES.Web.ApplicationService.IApplicationSvc {
        
        public ApplicationSvcClient() {
        }
        
        public ApplicationSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CancelApplication(AES.Web.ApplicationService.ApplicationInfoContract app) {
            return base.Channel.CancelApplication(app);
        }
        
        public System.Threading.Tasks.Task<bool> CancelApplicationAsync(AES.Web.ApplicationService.ApplicationInfoContract app) {
            return base.Channel.CancelApplicationAsync(app);
        }
        
        public AES.Shared.Contracts.UserInfoContract GetApplicantsAwaitingCalls() {
            return base.Channel.GetApplicantsAwaitingCalls();
        }
        
        public System.Threading.Tasks.Task<AES.Shared.Contracts.UserInfoContract> GetApplicantsAwaitingCallsAsync() {
            return base.Channel.GetApplicantsAwaitingCallsAsync();
        }
        
        public AES.Shared.Contracts.UserInfoContract GetApplicantsAwaitingInterview(int storeID) {
            return base.Channel.GetApplicantsAwaitingInterview(storeID);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.Contracts.UserInfoContract> GetApplicantsAwaitingInterviewAsync(int storeID) {
            return base.Channel.GetApplicantsAwaitingInterviewAsync(storeID);
        }
        
        public AES.Web.ApplicationService.ApplicationInfoContract GetApplication(AES.Shared.Contracts.ApplicantInfoContract user) {
            return base.Channel.GetApplication(user);
        }
        
        public System.Threading.Tasks.Task<AES.Web.ApplicationService.ApplicationInfoContract> GetApplicationAsync(AES.Shared.Contracts.ApplicantInfoContract user) {
            return base.Channel.GetApplicationAsync(user);
        }
        
        public AES.Web.ApplicationService.ApplicationInfoContract GetCallApplication(AES.Shared.Contracts.UserInfoContract user) {
            return base.Channel.GetCallApplication(user);
        }
        
        public System.Threading.Tasks.Task<AES.Web.ApplicationService.ApplicationInfoContract> GetCallApplicationAsync(AES.Shared.Contracts.UserInfoContract user) {
            return base.Channel.GetCallApplicationAsync(user);
        }
        
        public AES.Web.ApplicationService.ApplicationInfoContract GetInterviewApplication(AES.Shared.Contracts.UserInfoContract user) {
            return base.Channel.GetInterviewApplication(user);
        }
        
        public System.Threading.Tasks.Task<AES.Web.ApplicationService.ApplicationInfoContract> GetInterviewApplicationAsync(AES.Shared.Contracts.UserInfoContract user) {
            return base.Channel.GetInterviewApplicationAsync(user);
        }
        
        public bool PullApplicantFromCallQueue(AES.Shared.Contracts.UserInfoContract user) {
            return base.Channel.PullApplicantFromCallQueue(user);
        }
        
        public System.Threading.Tasks.Task<bool> PullApplicantFromCallQueueAsync(AES.Shared.Contracts.UserInfoContract user) {
            return base.Channel.PullApplicantFromCallQueueAsync(user);
        }
        
        public AES.Shared.AppSvcResponse SavePartialApplication(AES.Web.ApplicationService.ApplicationInfoContract app) {
            return base.Channel.SavePartialApplication(app);
        }
        
        public System.Threading.Tasks.Task<AES.Shared.AppSvcResponse> SavePartialApplicationAsync(AES.Web.ApplicationService.ApplicationInfoContract app) {
            return base.Channel.SavePartialApplicationAsync(app);
        }
        
        public bool SetApplicationStatus(AES.Web.ApplicationService.ApplicationInfoContract app, AES.Shared.AppStatus status) {
            return base.Channel.SetApplicationStatus(app, status);
        }
        
        public System.Threading.Tasks.Task<bool> SetApplicationStatusAsync(AES.Web.ApplicationService.ApplicationInfoContract app, AES.Shared.AppStatus status) {
            return base.Channel.SetApplicationStatusAsync(app, status);
        }
        
        public bool SubmitApplication(AES.Shared.Contracts.ApplicantInfoContract user) {
            return base.Channel.SubmitApplication(user);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitApplicationAsync(AES.Shared.Contracts.ApplicantInfoContract user) {
            return base.Channel.SubmitApplicationAsync(user);
        }
    }
}
